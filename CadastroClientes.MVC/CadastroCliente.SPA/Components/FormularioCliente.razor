@using CadastroClientes.MVC.Models

@code {

    [Parameter, EditorRequired]
    public ModeloCliente modelo { get; set; }

    [Parameter,EditorRequired]
    public EventCallback<ModeloCliente> OnValidSubmit {get;set;}

    [Parameter,EditorRequired]
    public EventCallback OnRetornoClicked {get;set;}

    protected override void OnParametersSet()
    {
        apresentarCpf = modelo.CPF is null;
    }
    bool apresentarCpf ;

    async void realizarSubmit(ModeloCliente modelo)
    {
        try
        {
            await OnValidSubmit.InvokeAsync(modelo);
            erros = "";
        }
        catch (Exception ex)
        {
            var isDuplicateKey = ex.InnerException?.Message?.Contains("UNIQUE constraint failed: clientes.CPF");
            if(isDuplicateKey != null && isDuplicateKey.Value){
                erros = "Já existe um cliente com o cpf: " + modelo.CPF;
            }else
            {
                erros = ex.Message;
            }
        }
    }

    string erros = "";

}



<EditForm Model="modelo" OnValidSubmit=@(x => realizarSubmit((ModeloCliente)x.Model))>
    <DataAnnotationsValidator />
    <div class="text-danger">@erros</div>
    
    <div class="form-group  + @(apresentarCpf ? "" : "oculto")">
        <label>CPF: </label>
        <InputText class="form-control"  @bind-Value=modelo.CPF />
        <ValidationMessage For="@(() => modelo.CPF)" />
    </div>

    <div class="form-group">
        <label>Nome: </label>
        <InputText class="form-control" @bind-Value=modelo.Nome />
        <ValidationMessage For="@(() => modelo.Nome)" />
    </div>

    <div class="row align-items-center my-2">
        <div class="col-sm-7">
            <label>Data de Nascimento: </label>
            <InputDate class="form-control" @bind-Value=modelo.DataNascimento />
            <ValidationMessage For="@(() => modelo.DataNascimento)" />
        </div>
        

    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Cadastrar</button>
        <button type="button" class="btn btn-secondary" @onclick=OnRetornoClicked >Voltar</button>
    </div>

</EditForm>


@*

        <div class="col-sm-5 @(modelo.Idade < 100 && apresentarCpf ? "" : "oculto") ">
            <div class="form-group ">
                <label class="control-label">Idade: </label>
                <span>@modelo.Idade</span>
            </div>
            <div class="form-group">
                <label class="control-label">Poder De Decisao: </label>
                <div class="justify-content-start align-items-center">
                    <PoderDecisao VlrPoderDecisao="@modelo.PoderDeDecisao"/>
                </div>
            </div>
        </div>*@